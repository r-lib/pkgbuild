% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile-dll.r
\name{compile_dll}
\alias{compile_dll}
\title{Compile a .dll/.so from source.}
\usage{
compile_dll(path = ".", quiet = FALSE)
}
\arguments{
\item{path}{Path to a package, or within a package.}

\item{quiet}{if \code{TRUE} suppresses output from this function.}
}
\value{
The names of the DLL, invisibly.
}
\description{
\code{compile_dll} performs a fake R CMD install so code that
works here should work with a regular install (and vice versa).
During compilation, debug flags are set with
\code{\link{compiler_flags}(TRUE)}.
}
\details{
The build system normally only recompiles the files that were
changed since the last build. However if a header or makefile has
changed, the whole source is recompiled from scratch. Furthermore,
if the `devtools.clean.compile.subdir.changes` global option is set
to `TRUE`, any change in subdirectories trigger a complete
recompilation.
}
\note{
If this is used to compile code that uses Rcpp, you will need to
  add the following line to your \code{Makevars} file so that it
  knows where to find the Rcpp headers:
  \code{PKG_CPPFLAGS=`$(R_HOME)/bin/Rscript -e 'Rcpp:::CxxFlags()'`}
}
\seealso{
\code{\link{clean_dll}} to delete the compiled files.
}

